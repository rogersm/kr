#0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|PUSHNEW| :|CLTL2| |COMMON-LISP|::|*FEATURES*|)
(|SYSTEM|::|%IN-PACKAGE| "KR" :|NICKNAMES| '|COMMON-LISP|::|NIL| :|USE|
 '|COMMON-LISP|::|NIL| :|CASE-SENSITIVE| |COMMON-LISP|::|NIL| :|CASE-INVERTED|
 |COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|SHADOW|
 '("DEFCLASS" "MAKE-INSTANCE" "DEFMETHOD" "CALL-NEXT-METHOD") "KR")
(|COMMON-LISP|::|USE-PACKAGE| '("COMMON-LISP") "KR")
(|COMMON-LISP|::|FIND-PACKAGE| "KR")
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "KR"))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |KR|::|*INHERITANCE-RELATIONS*|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |KR|::|*RELATIONS*|))
(|SYSTEM|::|C-DEFUN| '|KR|::|SCHEMA-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KR|::|NAME|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|IS-A-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KR|::|SCHEMA| |COMMON-LISP|::|TYPE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KR|::|RELATION-P|)
(|SYSTEM|::|%PUTD| '|KR|::|RELATION-P|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KR|::|RELATION-P|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|/=|
      (|EXT|::|LIST-LENGTH-DOTTED| |SYSTEM|::|<MACRO-FORM>|) 2.)
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KR|::|SLOT| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |KR|::|RELATION-P|
       `(|COMMON-LISP|::|MEMBER| :|RELATION|
         (|COMMON-LISP|::|GET| ,|KR|::|SLOT| :|IS-A|)))))))))
(|SYSTEM|::|C-DEFUN| '|KR|::|CREATE-RELATION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KR|::|RELATION| |KR|::|INHERITANCE-P| |KR|::|INVERSES|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|UNLINK-ONE-VALUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KR|::|SCHEMA| |KR|::|SLOT| |KR|::|VALUE|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|UNLINK-ALL-VALUES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KR|::|SCHEMA| |KR|::|SLOT|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|LINK-IN-RELATION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KR|::|SCHEMA| |KR|::|SLOT| |COMMON-LISP|::|VALUES|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|REPLACE-OLD-VALUES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KR|::|SCHEMA| |KR|::|SLOT| |KR|::|OLD-VALUES| |KR|::|NEW-VALUE|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|COPY-SCHEMA|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KR|::|SCHEMA|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|DELETE-SCHEMA|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KR|::|SCHEMA|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|CREATE-SLOT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KR|::|SCHEMA| |KR|::|SLOT|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|DELETE-SLOT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KR|::|SCHEMA| |KR|::|SLOT|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|HAS-SLOT-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KR|::|SCHEMA| |KR|::|SLOT|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|GET-SLOTS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KR|::|SCHEMA|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|DO-SLOTS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KR|::|SCHEMA| |COMMON-LISP|::|FUNCTION|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|INTERNAL-ALL-SLOTS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KR|::|SCHEMA| |KR|::|SLOTS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KR|::|GET-ALL-SLOTS|)
(|SYSTEM|::|%PUTD| '|KR|::|GET-ALL-SLOTS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KR|::|GET-ALL-SLOTS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|/=|
      (|EXT|::|LIST-LENGTH-DOTTED| |SYSTEM|::|<MACRO-FORM>|) 2.)
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KR|::|SCHEMA| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |KR|::|GET-ALL-SLOTS|
       `(|KR|::|INTERNAL-ALL-SLOTS| ,|KR|::|SCHEMA|
         |COMMON-LISP|::|NIL|))))))))
(|SYSTEM|::|C-DEFUN| '|KR|::|GET-VALUES-INTERNAL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KR|::|SCHEMA| |KR|::|SLOT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KR|::|GET-VALUE|)
(|SYSTEM|::|%PUTD| '|KR|::|GET-VALUE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KR|::|GET-VALUE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|/=|
      (|EXT|::|LIST-LENGTH-DOTTED| |SYSTEM|::|<MACRO-FORM>|) 3.)
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KR|::|SCHEMA| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|KR|::|SLOT| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |KR|::|GET-VALUE|
       `(|COMMON-LISP|::|OR|
         (|COMMON-LISP|::|CAR|
          (|COMMON-LISP|::|GET| ,|KR|::|SCHEMA| ,|KR|::|SLOT|))
         (|COMMON-LISP|::|CAR|
          (|KR|::|GET-VALUES-INTERNAL| ,|KR|::|SCHEMA| ,|KR|::|SLOT|))))))))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KR|::|GET-VALUES|)
(|SYSTEM|::|%PUTD| '|KR|::|GET-VALUES|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KR|::|GET-VALUES|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|/=|
      (|EXT|::|LIST-LENGTH-DOTTED| |SYSTEM|::|<MACRO-FORM>|) 3.)
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KR|::|SCHEMA| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|KR|::|SLOT| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |KR|::|GET-VALUES|
       `(|COMMON-LISP|::|OR|
         (|COMMON-LISP|::|GET| ,|KR|::|SCHEMA| ,|KR|::|SLOT|)
         (|KR|::|GET-VALUES-INTERNAL| ,|KR|::|SCHEMA| ,|KR|::|SLOT|)))))))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KR|::|GET-LOCAL-VALUES|)
(|SYSTEM|::|%PUTD| '|KR|::|GET-LOCAL-VALUES|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KR|::|GET-LOCAL-VALUES|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|/=|
      (|EXT|::|LIST-LENGTH-DOTTED| |SYSTEM|::|<MACRO-FORM>|) 3.)
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KR|::|SCHEMA| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|KR|::|SLOT| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |KR|::|GET-LOCAL-VALUES|
       `(|COMMON-LISP|::|GET| ,|KR|::|SCHEMA| ,|KR|::|SLOT|))))))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KR|::|SCHEMA-CALL|)
(|SYSTEM|::|%PUTD| '|KR|::|SCHEMA-CALL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KR|::|SCHEMA-CALL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|<| (|EXT|::|LIST-LENGTH-DOTTED| |SYSTEM|::|<MACRO-FORM>|)
      3.)
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KR|::|SCHEMA| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|KR|::|FIELD| (|COMMON-LISP|::|CADDR| . #1#))
       (|KR|::|ARGS| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |KR|::|SCHEMA-CALL|
       `(|COMMON-LISP|::|LET| ((|KR|::|SC| ,|KR|::|SCHEMA|))
         (|COMMON-LISP|::|FUNCALL|
          (|KR|::|GET-VALUE| |KR|::|SC| ,|KR|::|FIELD|) |KR|::|SC|
          ,@|KR|::|ARGS|)))))))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KR|::|SCHEMA-CALL-INHERITED|)
(|SYSTEM|::|%PUTD| '|KR|::|SCHEMA-CALL-INHERITED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KR|::|SCHEMA-CALL-INHERITED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|<| (|EXT|::|LIST-LENGTH-DOTTED| |SYSTEM|::|<MACRO-FORM>|)
      3.)
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KR|::|SCHEMA| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|KR|::|FIELD| (|COMMON-LISP|::|CADDR| . #1#))
       (|KR|::|ARGS| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |KR|::|SCHEMA-CALL-INHERITED|
       `(|COMMON-LISP|::|LET| ((|KR|::|SC| ,|KR|::|SCHEMA|))
         (|COMMON-LISP|::|FUNCALL|
          (|COMMON-LISP|::|CAR|
           (|KR|::|GET-VALUES-INTERNAL| |KR|::|SC| ,|KR|::|FIELD|))
          |KR|::|SC| ,@|KR|::|ARGS|)))))))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KR|::|DOVALUES|)
(|SYSTEM|::|%PUTD| '|KR|::|DOVALUES|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KR|::|DOVALUES|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|<| (|EXT|::|LIST-LENGTH-DOTTED| |SYSTEM|::|<MACRO-FORM>|)
      2.)
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G6433| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G6434|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|/=| (|EXT|::|LIST-LENGTH-DOTTED| #1#) 3.)
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|KR|::|DOVALUES| #1# '(|KR|::|VAR| |KR|::|SCHEMA| |KR|::|SLOT|))
         #1#))
       (|KR|::|VAR| (|COMMON-LISP|::|CAR| #3#))
       (|KR|::|SCHEMA| (|COMMON-LISP|::|CADR| . #4=(#3#)))
       (|KR|::|SLOT| (|COMMON-LISP|::|CADDR| . #4#))
       (|KR|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |KR|::|DOVALUES|
       `(|COMMON-LISP|::|LET|
         ((|COMMON-LISP|::|VALUES|
           (|KR|::|GET-VALUES| ,|KR|::|SCHEMA| ,|KR|::|SLOT|)))
         (|COMMON-LISP|::|IF| |COMMON-LISP|::|VALUES|
          (|COMMON-LISP|::|DOLIST| (,|KR|::|VAR| |COMMON-LISP|::|VALUES|)
           ,@|KR|::|BODY|))))))))))
(|SYSTEM|::|C-DEFUN| '|KR|::|MAP-ALL-VALUES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|FUNCTION| |KR|::|SCHEMA| |KR|::|SLOT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KR|::|DO-ALL-VALUES|)
(|SYSTEM|::|%PUTD| '|KR|::|DO-ALL-VALUES|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KR|::|DO-ALL-VALUES|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|<| (|EXT|::|LIST-LENGTH-DOTTED| |SYSTEM|::|<MACRO-FORM>|)
      2.)
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G6469| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G6470|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|/=| (|EXT|::|LIST-LENGTH-DOTTED| #1#) 3.)
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|KR|::|DO-ALL-VALUES| #1#
          '(|KR|::|VAR| |KR|::|SCHEMA| |KR|::|SLOT|))
         #1#))
       (|KR|::|VAR| (|COMMON-LISP|::|CAR| #3#))
       (|KR|::|SCHEMA| (|COMMON-LISP|::|CADR| . #4=(#3#)))
       (|KR|::|SLOT| (|COMMON-LISP|::|CADDR| . #4#))
       (|KR|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |KR|::|DO-ALL-VALUES|
       `(|KR|::|MAP-ALL-VALUES|
         #'(|COMMON-LISP|::|LAMBDA| (|KR|::|V|)
            (|COMMON-LISP|::|LET| ((,|KR|::|VAR| |KR|::|V|)) ,@|KR|::|BODY|))
         ,|KR|::|SCHEMA| ,|KR|::|SLOT|))))))))
(|SYSTEM|::|C-DEFUN| '|KR|::|SET-VALUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KR|::|SCHEMA| |KR|::|SLOT| |KR|::|VALUE|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|SET-VALUES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KR|::|SCHEMA| |KR|::|SLOT| |COMMON-LISP|::|VALUES|)))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|REMPROP| '|KR|::|GET-VALUE| '|SYSTEM|::|DEFSTRUCT-WRITER|)
 (|SYSTEM|::|CHECK-REDEFINITION| '|KR|::|GET-VALUE| '|COMMON-LISP|::|DEFSETF|
  (|COMMON-LISP|::|AND|
   (|COMMON-LISP|::|GET| '|KR|::|GET-VALUE| '|SYSTEM|::|SETF-EXPANDER|)
   '|SYSTEM|::|SETF-EXPANDER|))
 (|SYSTEM|::|%PUT| '|KR|::|GET-VALUE| '|SYSTEM|::|SETF-EXPANDER|
  '|KR|::|SET-VALUE|)
 (|SYSTEM|::|%SET-DOCUMENTATION| '|KR|::|GET-VALUE| '|COMMON-LISP|::|SETF|
  |COMMON-LISP|::|NIL|)
 '|KR|::|GET-VALUE|)
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|REMPROP| '|KR|::|GET-VALUES| '|SYSTEM|::|DEFSTRUCT-WRITER|)
 (|SYSTEM|::|CHECK-REDEFINITION| '|KR|::|GET-VALUES| '|COMMON-LISP|::|DEFSETF|
  (|COMMON-LISP|::|AND|
   (|COMMON-LISP|::|GET| '|KR|::|GET-VALUES| '|SYSTEM|::|SETF-EXPANDER|)
   '|SYSTEM|::|SETF-EXPANDER|))
 (|SYSTEM|::|%PUT| '|KR|::|GET-VALUES| '|SYSTEM|::|SETF-EXPANDER|
  '|KR|::|SET-VALUES|)
 (|SYSTEM|::|%SET-DOCUMENTATION| '|KR|::|GET-VALUES| '|COMMON-LISP|::|SETF|
  |COMMON-LISP|::|NIL|)
 '|KR|::|GET-VALUES|)
(|SYSTEM|::|C-DEFUN| '|KR|::|SET-VALUE-N|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KR|::|SCHEMA| |KR|::|SLOT| |KR|::|VALUE| |COMMON-LISP|::|POSITION|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|APPEND-VALUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KR|::|SCHEMA| |KR|::|SLOT| |KR|::|VALUE|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|DELETE-VALUE-N|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KR|::|SCHEMA| |KR|::|SLOT| |COMMON-LISP|::|POSITION|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|PS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KR|::|SCHEMA|)))
(|SYSTEM|::|C-DEFUN| '|KR|::|CREATE-SCHEMA-BODY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KR|::|SCHEMA| |KR|::|INIT| |COMMON-LISP|::|REST|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KR|::|CREATE-SCHEMA|)
(|SYSTEM|::|%PUTD| '|KR|::|CREATE-SCHEMA|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KR|::|CREATE-SCHEMA|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|<| (|EXT|::|LIST-LENGTH-DOTTED| |SYSTEM|::|<MACRO-FORM>|)
      2.)
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KR|::|NAME| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP|::|REST| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |KR|::|CREATE-SCHEMA|
       `(|COMMON-LISP|::|LET|
         ((|KR|::|SCHEMA| ,|KR|::|NAME|)
          ,@(|COMMON-LISP|::|WHEN| |COMMON-LISP|::|REST| '(|KR|::|INIT|)))
         ,@(|KR|::|CREATE-SCHEMA-BODY| '|KR|::|SCHEMA| '|KR|::|INIT|
            |COMMON-LISP|::|REST|)
         |KR|::|SCHEMA|))))))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KR|::|CREATE-FRESH-SCHEMA|)
(|SYSTEM|::|%PUTD| '|KR|::|CREATE-FRESH-SCHEMA|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KR|::|CREATE-FRESH-SCHEMA|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|<| (|EXT|::|LIST-LENGTH-DOTTED| |SYSTEM|::|<MACRO-FORM>|)
      2.)
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KR|::|NAME| (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP|::|REST| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |KR|::|CREATE-FRESH-SCHEMA|
       `(|COMMON-LISP|::|LET|
         ((|KR|::|SCHEMA| ,|KR|::|NAME|)
          ,@(|COMMON-LISP|::|WHEN| |COMMON-LISP|::|REST| '(|KR|::|INIT|)))
         (|KR|::|DELETE-SCHEMA| |KR|::|SCHEMA|)
         ,@(|KR|::|CREATE-SCHEMA-BODY| '|KR|::|SCHEMA| '|KR|::|INIT|
            |COMMON-LISP|::|REST|)
         |KR|::|SCHEMA|))))))))
(|SYSTEM|::|C-DEFUN| '|KR|::|INITIALIZE-KR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
